# Generated by Django 5.2.5 on 2025-08-31 17:46

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "user_type",
                    models.CharField(
                        choices=[
                            ("creator", "Content Creator"),
                            ("investor", "Investor/Backer"),
                            ("admin", "Platform Admin"),
                        ],
                        default="investor",
                        help_text="Type of user on the platform",
                        max_length=20,
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        help_text="Phone number for contact and verification",
                        max_length=17,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                    ),
                ),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True,
                        help_text="User profile picture",
                        null=True,
                        upload_to="profile_pictures/",
                    ),
                ),
                (
                    "bio",
                    models.TextField(
                        blank=True,
                        help_text="User biography and description",
                        max_length=500,
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(
                        blank=True,
                        help_text="User date of birth for age verification",
                        null=True,
                    ),
                ),
                (
                    "address_line1",
                    models.CharField(
                        blank=True, help_text="Primary address line", max_length=255
                    ),
                ),
                (
                    "address_line2",
                    models.CharField(
                        blank=True, help_text="Secondary address line", max_length=255
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True, help_text="City of residence", max_length=100
                    ),
                ),
                (
                    "state_province",
                    models.CharField(
                        blank=True, help_text="State or province", max_length=100
                    ),
                ),
                (
                    "postal_code",
                    models.CharField(
                        blank=True, help_text="Postal/ZIP code", max_length=20
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        default="Sri Lanka",
                        help_text="Country of residence",
                        max_length=100,
                    ),
                ),
                (
                    "kyc_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("submitted", "Submitted"),
                            ("verified", "Verified"),
                            ("rejected", "Rejected"),
                        ],
                        default="pending",
                        help_text="KYC verification status",
                        max_length=20,
                    ),
                ),
                (
                    "kyc_submitted_at",
                    models.DateTimeField(
                        blank=True, help_text="When KYC was submitted", null=True
                    ),
                ),
                (
                    "kyc_verified_at",
                    models.DateTimeField(
                        blank=True, help_text="When KYC was verified", null=True
                    ),
                ),
                (
                    "preferred_language",
                    models.CharField(
                        choices=[("en", "English"), ("si", "Sinhala"), ("ta", "Tamil")],
                        default="en",
                        help_text="Preferred language for platform interface",
                        max_length=10,
                    ),
                ),
                (
                    "email_notifications",
                    models.BooleanField(
                        default=True, help_text="Receive email notifications"
                    ),
                ),
                (
                    "sms_notifications",
                    models.BooleanField(
                        default=False, help_text="Receive SMS notifications"
                    ),
                ),
                (
                    "creator_verified",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the creator account is verified",
                    ),
                ),
                (
                    "creator_category",
                    models.CharField(
                        blank=True,
                        help_text="Primary category of content creation",
                        max_length=100,
                    ),
                ),
                (
                    "investment_limit",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Maximum investment limit for this user",
                        max_digits=15,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "last_login_ip",
                    models.GenericIPAddressField(
                        blank=True, help_text="IP address of last login", null=True
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
                "db_table": "users",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="UserDocument",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("national_id", "National ID Card"),
                            ("passport", "Passport"),
                            ("drivers_license", "Driver's License"),
                            ("utility_bill", "Utility Bill"),
                            ("bank_statement", "Bank Statement"),
                            ("proof_of_income", "Proof of Income"),
                            ("business_registration", "Business Registration"),
                            ("other", "Other"),
                        ],
                        help_text="Type of document",
                        max_length=50,
                    ),
                ),
                (
                    "document_file",
                    models.FileField(
                        help_text="Uploaded document file", upload_to="user_documents/"
                    ),
                ),
                (
                    "document_number",
                    models.CharField(
                        blank=True,
                        help_text="Document identification number",
                        max_length=100,
                    ),
                ),
                (
                    "expiry_date",
                    models.DateField(
                        blank=True,
                        help_text="Document expiry date if applicable",
                        null=True,
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the document has been verified",
                    ),
                ),
                (
                    "verified_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When the document was verified",
                        null=True,
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Admin notes about the document"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "verified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="Admin who verified this document",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="verified_documents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Document",
                "verbose_name_plural": "User Documents",
                "db_table": "user_documents",
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "website",
                    models.URLField(
                        blank=True, help_text="Personal or business website"
                    ),
                ),
                (
                    "facebook",
                    models.URLField(blank=True, help_text="Facebook profile URL"),
                ),
                (
                    "twitter",
                    models.URLField(blank=True, help_text="Twitter profile URL"),
                ),
                (
                    "instagram",
                    models.URLField(blank=True, help_text="Instagram profile URL"),
                ),
                (
                    "linkedin",
                    models.URLField(blank=True, help_text="LinkedIn profile URL"),
                ),
                (
                    "occupation",
                    models.CharField(
                        blank=True,
                        help_text="Current occupation or profession",
                        max_length=100,
                    ),
                ),
                (
                    "company",
                    models.CharField(
                        blank=True,
                        help_text="Current company or organization",
                        max_length=100,
                    ),
                ),
                (
                    "experience_years",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Years of experience in the field",
                        null=True,
                    ),
                ),
                (
                    "portfolio_description",
                    models.TextField(
                        blank=True,
                        help_text="Description of creator portfolio and achievements",
                    ),
                ),
                (
                    "awards",
                    models.TextField(
                        blank=True, help_text="Awards and recognitions received"
                    ),
                ),
                (
                    "annual_income_range",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("under_500k", "Under LKR 500,000"),
                            ("500k_1m", "LKR 500,000 - 1,000,000"),
                            ("1m_2m", "LKR 1,000,000 - 2,000,000"),
                            ("2m_5m", "LKR 2,000,000 - 5,000,000"),
                            ("5m_10m", "LKR 5,000,000 - 10,000,000"),
                            ("over_10m", "Over LKR 10,000,000"),
                        ],
                        help_text="Annual income range for investment purposes",
                        max_length=50,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="extended_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Profile",
                "verbose_name_plural": "User Profiles",
                "db_table": "user_profiles",
            },
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["user_type"], name="users_user_ty_578f8f_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["kyc_status"], name="users_kyc_sta_4052e1_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["created_at"], name="users_created_6541e9_idx"),
        ),
        migrations.AddIndex(
            model_name="userdocument",
            index=models.Index(
                fields=["document_type"], name="user_docume_documen_734e21_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="userdocument",
            index=models.Index(
                fields=["is_verified"], name="user_docume_is_veri_41781f_idx"
            ),
        ),
    ]
