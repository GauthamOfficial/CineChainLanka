# Generated by Django 5.2.5 on 2025-09-09 09:02

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("campaigns", "0003_alter_campaign_cover_image"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="MarketplaceSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "platform_fee_percentage",
                    models.DecimalField(decimal_places=2, default=2.5, max_digits=5),
                ),
                (
                    "creator_royalty_percentage",
                    models.DecimalField(decimal_places=2, default=5.0, max_digits=5),
                ),
                (
                    "minimum_listing_price",
                    models.DecimalField(decimal_places=6, default=1.0, max_digits=20),
                ),
                (
                    "maximum_listing_price",
                    models.DecimalField(
                        decimal_places=6, default=1000000.0, max_digits=20
                    ),
                ),
                ("auction_duration_hours", models.PositiveIntegerField(default=72)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Marketplace Settings",
                "verbose_name_plural": "Marketplace Settings",
            },
        ),
        migrations.CreateModel(
            name="NFTListing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nft_id",
                    models.PositiveIntegerField(help_text="NFT ID from blockchain"),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=6,
                        help_text="Listing price in USDT",
                        max_digits=20,
                    ),
                ),
                ("currency", models.CharField(default="USDT", max_length=10)),
                (
                    "royalty_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Royalty percentage for future sales",
                        max_digits=5,
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Listing description"),
                ),
                ("image_url", models.URLField(blank=True, help_text="NFT image URL")),
                ("metadata", models.JSONField(default=dict, help_text="NFT metadata")),
                (
                    "listing_type",
                    models.CharField(
                        choices=[("fixed", "Fixed Price"), ("auction", "Auction")],
                        default="fixed",
                        max_length=10,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("sold", "Sold"),
                            ("cancelled", "Cancelled"),
                            ("expired", "Expired"),
                        ],
                        default="active",
                        max_length=10,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True, help_text="Auction end time", null=True
                    ),
                ),
                ("view_count", models.PositiveIntegerField(default=0)),
                ("like_count", models.PositiveIntegerField(default=0)),
                (
                    "campaign",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="nft_listings",
                        to="campaigns.campaign",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="nft_listings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "NFT Listing",
                "verbose_name_plural": "NFT Listings",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="NFTSale",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sale_price",
                    models.DecimalField(
                        decimal_places=6, help_text="Final sale price", max_digits=20
                    ),
                ),
                ("currency", models.CharField(default="USDT", max_length=10)),
                (
                    "platform_fee",
                    models.DecimalField(
                        decimal_places=6, help_text="Platform fee", max_digits=20
                    ),
                ),
                (
                    "creator_royalty",
                    models.DecimalField(
                        decimal_places=6, help_text="Creator royalty", max_digits=20
                    ),
                ),
                (
                    "seller_amount",
                    models.DecimalField(
                        decimal_places=6,
                        help_text="Amount received by seller",
                        max_digits=20,
                    ),
                ),
                (
                    "blockchain_tx_hash",
                    models.CharField(
                        help_text="Blockchain transaction hash", max_length=66
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "buyer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="nft_purchases",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "listing",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sale",
                        to="marketplace.nftlisting",
                    ),
                ),
            ],
            options={
                "verbose_name": "NFT Sale",
                "verbose_name_plural": "NFT Sales",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="NFTView",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "listing",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="views",
                        to="marketplace.nftlisting",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="nft_views",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "NFT View",
                "verbose_name_plural": "NFT Views",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="NFTLike",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="nft_likes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "listing",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="likes",
                        to="marketplace.nftlisting",
                    ),
                ),
            ],
            options={
                "verbose_name": "NFT Like",
                "verbose_name_plural": "NFT Likes",
                "ordering": ["-created_at"],
                "unique_together": {("listing", "user")},
            },
        ),
        migrations.CreateModel(
            name="NFTBid",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=6, help_text="Bid amount in USDT", max_digits=20
                    ),
                ),
                ("currency", models.CharField(default="USDT", max_length=10)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("outbid", "Outbid"),
                            ("winning", "Winning"),
                            ("won", "Won"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="active",
                        max_length=10,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "blockchain_tx_hash",
                    models.CharField(blank=True, max_length=66, null=True),
                ),
                (
                    "bidder",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="nft_bids",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "listing",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bids",
                        to="marketplace.nftlisting",
                    ),
                ),
            ],
            options={
                "verbose_name": "NFT Bid",
                "verbose_name_plural": "NFT Bids",
                "ordering": ["-amount", "-created_at"],
                "unique_together": {("listing", "bidder")},
            },
        ),
    ]
