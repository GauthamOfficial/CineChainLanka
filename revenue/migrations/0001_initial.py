# Generated by Django 5.2.5 on 2025-09-08 09:26

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("campaigns", "0003_alter_campaign_cover_image"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="OTTPlatformIntegration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "platform_type",
                    models.CharField(
                        choices=[
                            ("netflix", "Netflix"),
                            ("amazon_prime", "Amazon Prime"),
                            ("disney_plus", "Disney+"),
                            ("hulu", "Hulu"),
                            ("hbo_max", "HBO Max"),
                            ("paramount_plus", "Paramount+"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("api_endpoint", models.URLField(blank=True, null=True)),
                ("api_key", models.CharField(blank=True, max_length=255, null=True)),
                ("webhook_url", models.URLField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "OTT Platform Integration",
                "verbose_name_plural": "OTT Platform Integrations",
            },
        ),
        migrations.CreateModel(
            name="RevenueSource",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "revenue_type",
                    models.CharField(
                        choices=[
                            ("box_office", "Box Office"),
                            ("ott_platform", "OTT Platform"),
                            ("streaming", "Streaming"),
                            ("dvd_sales", "DVD Sales"),
                            ("merchandise", "Merchandise"),
                            ("licensing", "Licensing"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                (
                    "token_address",
                    models.CharField(
                        help_text="USDT or other stablecoin address", max_length=42
                    ),
                ),
                (
                    "platform_fee_percentage",
                    models.DecimalField(decimal_places=2, default=5.0, max_digits=5),
                ),
                (
                    "creator_fee_percentage",
                    models.DecimalField(decimal_places=2, default=30.0, max_digits=5),
                ),
                (
                    "investor_fee_percentage",
                    models.DecimalField(decimal_places=2, default=65.0, max_digits=5),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Revenue Source",
                "verbose_name_plural": "Revenue Sources",
            },
        ),
        migrations.CreateModel(
            name="RevenueAnalytics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "total_revenue",
                    models.DecimalField(decimal_places=6, default=0, max_digits=20),
                ),
                (
                    "total_creator_royalties",
                    models.DecimalField(decimal_places=6, default=0, max_digits=20),
                ),
                (
                    "total_platform_fees",
                    models.DecimalField(decimal_places=6, default=0, max_digits=20),
                ),
                (
                    "total_investor_royalties",
                    models.DecimalField(decimal_places=6, default=0, max_digits=20),
                ),
                ("total_distributions", models.PositiveIntegerField(default=0)),
                ("last_distribution_date", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "campaign",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="revenue_analytics",
                        to="campaigns.campaign",
                    ),
                ),
            ],
            options={
                "verbose_name": "Revenue Analytics",
                "verbose_name_plural": "Revenue Analytics",
            },
        ),
        migrations.CreateModel(
            name="RevenueEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=6, max_digits=20)),
                ("currency", models.CharField(default="USDT", max_length=10)),
                ("description", models.TextField()),
                ("revenue_date", models.DateField()),
                (
                    "verification_document",
                    models.FileField(
                        blank=True, null=True, upload_to="revenue_documents/"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("verified", "Verified"),
                            ("processed", "Processed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("verified_at", models.DateTimeField(blank=True, null=True)),
                (
                    "blockchain_tx_hash",
                    models.CharField(blank=True, max_length=66, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "campaign",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="revenue_entries",
                        to="campaigns.campaign",
                    ),
                ),
                (
                    "verified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="verified_revenues",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "source",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="revenue.revenuesource",
                    ),
                ),
            ],
            options={
                "verbose_name": "Revenue Entry",
                "verbose_name_plural": "Revenue Entries",
                "ordering": ["-revenue_date"],
            },
        ),
        migrations.CreateModel(
            name="RevenueWebhook",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("payload", models.JSONField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processed", "Processed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("response_code", models.PositiveIntegerField(blank=True, null=True)),
                ("response_message", models.TextField(blank=True, null=True)),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "campaign",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="revenue_webhooks",
                        to="campaigns.campaign",
                    ),
                ),
                (
                    "platform",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="webhooks",
                        to="revenue.ottplatformintegration",
                    ),
                ),
            ],
            options={
                "verbose_name": "Revenue Webhook",
                "verbose_name_plural": "Revenue Webhooks",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="RoyaltyDistribution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("distribution_date", models.DateTimeField()),
                (
                    "creator_amount",
                    models.DecimalField(decimal_places=6, max_digits=20),
                ),
                (
                    "platform_amount",
                    models.DecimalField(decimal_places=6, max_digits=20),
                ),
                (
                    "total_investor_amount",
                    models.DecimalField(decimal_places=6, max_digits=20),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "blockchain_tx_hash",
                    models.CharField(blank=True, max_length=66, null=True),
                ),
                ("error_message", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "campaign",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="royalty_distributions",
                        to="campaigns.campaign",
                    ),
                ),
                (
                    "revenue_entry",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="revenue.revenueentry",
                    ),
                ),
            ],
            options={
                "verbose_name": "Royalty Distribution",
                "verbose_name_plural": "Royalty Distributions",
                "ordering": ["-distribution_date"],
            },
        ),
        migrations.CreateModel(
            name="InvestorRoyalty",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nft_id", models.PositiveIntegerField()),
                (
                    "contribution_amount",
                    models.DecimalField(decimal_places=6, max_digits=20),
                ),
                (
                    "share_percentage",
                    models.DecimalField(decimal_places=2, max_digits=5),
                ),
                (
                    "royalty_amount",
                    models.DecimalField(decimal_places=6, max_digits=20),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("claimable", "Claimable"),
                            ("claimed", "Claimed"),
                            ("expired", "Expired"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("claimed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "blockchain_tx_hash",
                    models.CharField(blank=True, max_length=66, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "investor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="royalty_claims",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "distribution",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="investor_royalties",
                        to="revenue.royaltydistribution",
                    ),
                ),
            ],
            options={
                "verbose_name": "Investor Royalty",
                "verbose_name_plural": "Investor Royalties",
                "unique_together": {("distribution", "investor", "nft_id")},
            },
        ),
    ]
