# Generated by Django 5.2.5 on 2025-08-31 17:46

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("campaigns", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="PaymentMethod",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Payment method name", max_length=100, unique=True
                    ),
                ),
                (
                    "payment_type",
                    models.CharField(
                        choices=[
                            ("lanka_qr", "LankaQR"),
                            ("ez_cash", "eZ Cash"),
                            ("frimi", "FriMi"),
                            ("bank_transfer", "Bank Transfer"),
                            ("credit_card", "Credit Card"),
                            ("debit_card", "Debit Card"),
                            ("paypal", "PayPal"),
                            ("crypto", "Cryptocurrency"),
                        ],
                        help_text="Type of payment method",
                        max_length=20,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Payment method description"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this payment method is available",
                    ),
                ),
                (
                    "processing_fee_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Processing fee as percentage of transaction amount",
                        max_digits=5,
                    ),
                ),
                (
                    "processing_fee_fixed",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Fixed processing fee amount",
                        max_digits=10,
                    ),
                ),
                (
                    "minimum_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Minimum transaction amount",
                        max_digits=10,
                    ),
                ),
                (
                    "maximum_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=999999.99,
                        help_text="Maximum transaction amount",
                        max_digits=15,
                    ),
                ),
                (
                    "config_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Configuration data for payment method (API keys, endpoints, etc.)",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Payment Method",
                "verbose_name_plural": "Payment Methods",
                "db_table": "payment_methods",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="PaymentProvider",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Payment provider name", max_length=100, unique=True
                    ),
                ),
                (
                    "provider_type",
                    models.CharField(
                        choices=[
                            ("lanka_qr", "LankaQR"),
                            ("ez_cash", "eZ Cash"),
                            ("frimi", "FriMi"),
                            ("stripe", "Stripe"),
                            ("paypal", "PayPal"),
                            ("bank", "Bank Transfer"),
                        ],
                        help_text="Type of payment provider",
                        max_length=20,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this provider is active"
                    ),
                ),
                (
                    "api_key",
                    models.CharField(
                        blank=True, help_text="API key for the provider", max_length=255
                    ),
                ),
                (
                    "api_secret",
                    models.CharField(
                        blank=True,
                        help_text="API secret for the provider",
                        max_length=255,
                    ),
                ),
                (
                    "webhook_secret",
                    models.CharField(
                        blank=True,
                        help_text="Webhook secret for verification",
                        max_length=255,
                    ),
                ),
                (
                    "api_endpoint",
                    models.URLField(blank=True, help_text="API endpoint URL"),
                ),
                (
                    "webhook_endpoint",
                    models.URLField(blank=True, help_text="Webhook endpoint URL"),
                ),
                (
                    "config_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional configuration data",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Payment Provider",
                "verbose_name_plural": "Payment Providers",
                "db_table": "payment_providers",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Refund",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Refund amount in LKR",
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                    ),
                ),
                (
                    "reason",
                    models.CharField(help_text="Reason for refund", max_length=200),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "processed_at",
                    models.DateTimeField(
                        blank=True, help_text="When refund was processed", null=True
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Additional notes about the refund"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Refund",
                "verbose_name_plural": "Refunds",
                "db_table": "refunds",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "transaction_id",
                    models.CharField(
                        help_text="Unique transaction identifier",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "reference_id",
                    models.CharField(
                        blank=True,
                        help_text="External reference ID from payment provider",
                        max_length=100,
                    ),
                ),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[
                            ("contribution", "Campaign Contribution"),
                            ("refund", "Refund"),
                            ("withdrawal", "Withdrawal"),
                            ("fee", "Platform Fee"),
                        ],
                        default="contribution",
                        max_length=20,
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Transaction amount in LKR",
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                    ),
                ),
                (
                    "processing_fee",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Processing fee amount",
                        max_digits=10,
                    ),
                ),
                (
                    "net_amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Net amount after processing fees",
                        max_digits=15,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                            ("refunded", "Refunded"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "initiated_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When transaction was initiated"
                    ),
                ),
                (
                    "processed_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When transaction was processed",
                        null=True,
                    ),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When transaction was completed",
                        null=True,
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True, help_text="Error message if transaction failed"
                    ),
                ),
                (
                    "failure_reason",
                    models.CharField(
                        blank=True,
                        help_text="Reason for transaction failure",
                        max_length=200,
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional transaction metadata",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Transaction",
                "verbose_name_plural": "Transactions",
                "db_table": "transactions",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Contribution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Contribution amount in LKR",
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                    ),
                ),
                (
                    "is_anonymous",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this contribution is anonymous",
                    ),
                ),
                (
                    "message",
                    models.TextField(
                        blank=True,
                        help_text="Message from contributor to campaign creator",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "campaign",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contributions",
                        to="campaigns.campaign",
                    ),
                ),
                (
                    "reward",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="contributions",
                        to="campaigns.campaignreward",
                    ),
                ),
            ],
            options={
                "verbose_name": "Contribution",
                "verbose_name_plural": "Contributions",
                "db_table": "contributions",
                "ordering": ["-created_at"],
            },
        ),
    ]
